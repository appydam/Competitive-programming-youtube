#include <bits/stdc++.h>
using namespace std;

void printDFS(vector<vector<int>>&edges , int V , int sv , vector<bool>&visited){
    
    // cout<<sv <<" "<<endl;   // starting vertex
    visited[sv] = true;
    for(int i=0 ; i<V ; i++){
        if(i == sv){
            continue;
        }
        if(edges[sv][i] == 1){
            if(visited[i] == true){
                continue;
            }
            printDFS(edges,V,i,visited);
        }
    }
}  

bool isConnected(vector<vector<int>>edges , int V ){
    vector<bool>visited(V,false);

    printDFS(edges , V , 0 , visited);
    for(int i=0;i<V;i++){
        if(visited[i] == false){
            return false;
        }
    }
    return true;
}


int main() {
    int V, E; 
    cin >> V >> E;

    vector<vector<int>>edges(V,vector<int>(V,0));

    for(int i=0 ; i<E ; i++){
        int f,s;
        cin>>f>>s;
        edges[f][s] = 1;
        edges[s][f] = 1;
    }

    if(isConnected(edges,V)){
        cout<<"true";
    }
    else{
        cout<<"false";
    }

    return 0;
}
