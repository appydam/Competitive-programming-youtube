#include<bits/stdc++.h>
using namespace std;

void DFSTraverse(vector<vector<int>>&edges , int V , int sv , vector<bool>&visited){

    visited[sv] = true;
    for(int i=1;i<=V;i++){
        if(i == sv) continue;
        if(edges[sv][i] == 1){
            if(visited[i] == true) 
                continue;
            DFSTraverse(edges , V , i , visited);
        }
    }
}

int numberOfConnectedComponents(vector<vector<int>>&edges , int V){
    vector<bool>visited(V+1,false);
    int count = 0;
    for(int i=1;i<=V;i++){
        if(!visited[i]){
            count++;
            DFSTraverse(edges , V , i , visited);
        }
    }
    return count;
}


int solve(int V,int E,vector<int>u,vector<int>v)
{
	vector<vector<int>>edges(V+1,vector<int>(V+1,0));
    for(int i=0;i<E;i++){
        int f = u[i];
        int s = v[i];
        edges[f][s] = 1;
        edges[s][f] = 1;
    }
    
    int count = numberOfConnectedComponents(edges , V);
    return count;
}
