package codechef;

import java.util.Scanner;

public class StupidMachine {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		try {

			Scanner scn = new Scanner(System.in);
			int t = scn.nextInt();
			while (t != 0) {
				int n = scn.nextInt();
				long []arr = new long[n];
				for(int i=0;i<n;i++) {
					arr[i]=scn.nextLong();
				}
				
				System.out.println(func(arr));
				

				t--;
			}
		} catch (Exception e) {
			return;
		}

	}
	private static long func(long[] arr) {
		long  count=0;
		
		//base case
		if(arr.length==0)
			return count;
		
			long min = findMin(arr);			
			int loc = locateMin(arr);
			long[]arr1 = new long[loc]; // array which will pass in the recurssion
			for(int i=0;i<loc;i++) {
				
				arr[i]=arr[i]-min;
				arr1[i]=arr[i];   
			}
			
			count+=min*arr.length+func(arr1);
//			
			return count;
		
	}
	public static long findMin(long[]arr) {
		long min = Long.MAX_VALUE;
		for(int i=0;i<arr.length;i++) {
			if(arr[i]<min) {
				min = arr[i];
			}
		}
		return min;
	}
	public static int locateMin(long[]arr) {
		long min = Long.MAX_VALUE;
		int loc = 0; 
		for(int i=0;i<arr.length;i++) {
			if(arr[i]<min) {
				min = arr[i];
				loc = i;
			}
		}
		return loc;
	}
	
	

}
